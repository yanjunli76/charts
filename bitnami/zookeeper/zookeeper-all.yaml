---
# Source: zookeeper/templates/poddisruptionbudget.yaml

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: nsxi-zookeeper
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-5.7.1
    app.kubernetes.io/instance: nsxi
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: zookeeper
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/instance: nsxi
      app.kubernetes.io/component: zookeeper
  maxUnavailable: 1
  


---
# Source: zookeeper/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: nsxi-zookeeper-headless
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-5.7.1
    app.kubernetes.io/instance: nsxi
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: zookeeper
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: client
      port: 2181
      targetPort: client
    - name: follower
      port: 2888
      targetPort: follower
    - name: election
      port: 3888
      targetPort: election
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: nsxi
    app.kubernetes.io/component: zookeeper

---
# Source: zookeeper/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: nsxi-zookeeper
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-5.7.1
    app.kubernetes.io/instance: nsxi
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: zookeeper
spec:
  type: ClusterIP
  ports:
    - name: client
      port: 2181
      targetPort: client
    - name: follower
      port: 2888
      targetPort: follower
    - name: election
      port: 3888
      targetPort: election
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: nsxi
    app.kubernetes.io/component: zookeeper

---
# Source: zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nsxi-zookeeper
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-5.7.1
    app.kubernetes.io/instance: nsxi
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: zookeeper
    role: zookeeper
spec:
  serviceName: nsxi-zookeeper-headless
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/instance: nsxi
      app.kubernetes.io/component: zookeeper
  template:
    metadata:
      name: nsxi-zookeeper
      labels:
        app.kubernetes.io/name: zookeeper
        helm.sh/chart: zookeeper-5.7.1
        app.kubernetes.io/instance: nsxi
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/component: zookeeper
    spec:
      
      securityContext:
        fsGroup: 1001
      containers:
        - name: zookeeper
          image: docker.io/bitnami/zookeeper:3.5.7-debian-10-r12
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - bash
            - -ec
            - |
                # Execute entrypoint as usual after obtaining ZOO_SERVER_ID based on POD hostname
                HOSTNAME=`hostname -s`
                if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
                  ORD=${BASH_REMATCH[2]}
                  export ZOO_SERVER_ID=$((ORD+1))
                else
                  echo "Failed to get index from hostname $HOST"
                  exit 1
                fi
                exec /entrypoint.sh /run.sh
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            
          env:
            - name: BITNAMI_DEBUG
              value: "true"
              
            - name: ZOO_PORT_NUMBER
              value: "2181"
            - name: ZOO_TICK_TIME
              value: "2000"
            - name: ZOO_INIT_LIMIT
              value: "10"
            - name: ZOO_SYNC_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_4LW_COMMANDS_WHITELIST
              value: "srvr, mntr"
            - name: ZOO_LISTEN_ALLIPS_ENABLED
              value: "no"
            - name: ZOO_AUTOPURGE_INTERVAL
              value: "0"
            - name: ZOO_AUTOPURGE_RETAIN_COUNT
              value: "3"
            - name: ZOO_SERVERS
              value: nsxi-zookeeper-0.nsxi-zookeeper-headless.default.svc.cluster.local:2888:3888 nsxi-zookeeper-1.nsxi-zookeeper-headless.default.svc.cluster.local:2888:3888 nsxi-zookeeper-2.nsxi-zookeeper-headless.default.svc.cluster.local:2888:3888 
            - name: ZOO_ENABLE_AUTH
              value: "yes"
            - name: ZOO_CLIENT_USER
              value: "super"
            - name: ZOO_CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nsxi-zookeeper
                  key: client-password
            - name: ZOO_SERVER_USERS
              value: "super kafka druid"
            - name: ZOO_SERVER_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: nsxi-zookeeper
                  key: server-password
            - name: ZOO_HEAP_SIZE
              value: "1024"
            - name: ZOO_LOG_LEVEL
              value: "INFO"
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "no"
          ports:
            - name: client
              containerPort: 2181
            - name: follower
              containerPort: 2888
            - name: election
              containerPort: 3888
          livenessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /bitnami/zookeeper
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        storageClassName: zookeeper-local-storage

---
# Source: zookeeper/templates/configmap.yaml

---
# Source: zookeeper/templates/metrics-deployment.yaml


---
# Source: zookeeper/templates/metrics-svc.yaml


---
# Source: zookeeper/templates/networkpolicy.yaml


---
# Source: zookeeper/templates/serviceaccount.yaml


---
# Source: zookeeper/templates/servicemonitor.yaml


